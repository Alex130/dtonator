config:
  dtoPackage: com.bizo.dtonator.dtos
  domainPackage: com.bizo.dtonator.domain
  mapperPackage: com.bizo.dtonator.mapper
  modelPackage: com.bizo.dtonator.client.model
  indent: two-space
  valueTypes:
    com.bizo.dtonator.domain.Dollars: com.bizo.dtonator.dtos.Dollars
  excludedAnnotations:
    com.bizo.dtonator.annotation.Transient: true

EmployerDto:
  domain: Employer
  properties: '*'

EmployeeDto:
  domain: Employee
  properties: '*'
  equality: '*'

# testing a list of ids
EmployeeWithAccountIdsDto:
  domain: Employee
  properties: accounts ArrayList<Integer>, *
  publicConstructor: true

# testing a list of entites that guesses the EmployeeWithAccountDto
EmployeeWithAccountsDto:
  domain: Employee
  properties: id, name, accounts

RoleDto:
  domain: Role
  properties: '*'
  
EmployeeWithRolesDto:
  domain: Employee
  properties: roles, *

# need the EmployeeAccountDto
EmployeeAccountDto:
  domain: EmployeeAccount
  properties: '*'

"EmployeeTypedAccountDto":
  domain: EmployeeTypedAccount
  properties: '*'
  
EmployeeRedAccountDto:
  domain: EmployeeRedAccount
  properties: '*'

EmployeeOtherRedAccountDto:
  extends: "EmployeeTypedAccountDto"
  domain: EmployeeRedAccount
  properties: account T, *

ManagerWithAccountDto:
  domain: ManagerWithAccount
  properties: '*'  
  
ManagerWithEmployertDto:
  domain: ManagerWithEmployer
  properties: '*'
  
ManagerWithEmployerAndAccountDto:
  domain: ManagerWithEmployerAndAccount
  properties: '*'

# testing a list of entities that uses an explicit child dto
EmployeeWithSimpleAccountsDto:
  domain: Employee
  properties: id, name, accounts ArrayList<EmployeeSimpleAccountDto>

EmployeeSimpleAccountDto:
  domain: EmployeeAccount
  properties: id, name # skip dollars

# testing an entity
EmployeeWithEmployerDto:
  domain: Employee
  properties: id, name, employer

# testing a child with it's parent id
EmployeeWithEmployerIdDto:
  domain: Employee
  properties: id, employerId

# testing a child with it's parent id
EmployeeWithWithFooIdDto:
  domain: EmployeeWithFooId
  properties: id, foo, fooId

# testing not having an id
EmployeeWithOnlyNameDto:
  domain: Employee
  properties: name

# testing inheritance
EmployeeWithTypedAccountsDto:
  domain: EmployeeWithTypedAccounts
  properties: id, name, accounts
  tessellModel: true

AccountDto:
  domain: Account
  properties: '*'
  tessellModel: true
  forceMapperMethods: name

RedAccountDto:
  extends: AccountDto
  domain: RedAccount
  properties: '*'
  tessellModel: true

BlueAccountDto:
  extends: AccountDto
  domain: BlueAccount
  properties: bar
  tessellModel: true

BlueHueAccountDto:
  extends: BlueAccountDto
  domain: BlueHueAccount
  properties: zaz
  tessellModel: true
  
#testing excluding annotated fields
EmployeeWithoutAnnotationsDto:
  domain: EmployeeWithAnnotations
  properties: '*'
  
EmployeeWithAnnotationsDto:
  domain: EmployeeWithAnnotations
  properties: '*'
  excludedAnnotations:
    com.bizo.dtonator.annotation.Transient: false

#test inheritance with all properties included
GreenAccountDto:
  extends: AccountDto
  domain: GreenAccount
  properties: '*'
  tessellModel: true
  
GreenHueAccountDto:
  extends: GreenAccountDto
  domain: GreenHueAccount
  properties: '*'
  tessellModel: true
  
YellowAccountDto:
  domain: RedAccount
  properties: '*'

# enums
EmployeeType:
  domain: EmployeeType

EmployeeExtensionDto:
  domain: Employee
  properties: id, extensionValue Integer

ClientOnlyDto:
  properties: id Long, name String
  equality: id

# tessell integration
EmployeeTslDto:
  domain: Employee
  tessellModel: true
  properties: '*'

# tessell list of models generation
EmployeeWithAccountsTslDto:
  domain: Employee
  properties: name, accounts ArrayList<EmployeeAccountTslDto>, otherAccounts ArrayList<EmployeeAccountTslDto>
  tessellModel: true

EmployeeAccountTslDto:
  domain: EmployeeAccount
  properties: '*'
  tessellModel: true

EmployeeAccountHasName:
  properties: name String
  interfaces: com.bizo.dtonator.dtos.HasName
  beanMethods: true

# have isEnum pick up that EmployeeType is an enum
EmployeeWithTypeDto:
  properties: name String, type EmployeeType
  tessellModel: true

